install
cdrom
lang en_US.UTF-8
keyboard us
network --bootproto=dhcp --onboot=on --device=eth0
rootpw vagrant
firewall --disabled
selinux --permissive
timezone America/New_York
unsupported_hardware
bootloader --location=mbr
text
skipx
zerombr
clearpart --all --initlabel
autopart
auth --enableshadow --passalgo=sha512 --kickstart
firstboot --disabled
reboot --eject
user --name=vagrant --plaintext --password vagrant

%packages --nobase --ignoremissing --excludedocs
# vagrant needs this to copy initial files via scp
openssh-clients
sudo
kernel-headers
kernel-devel
gcc
make
perl
selinux-policy-devel
wget
nfs-utils
net-tools
bzip2
-fprintd-pam
-intltool

# unnecessary firmware
-aic94xx-firmware
-alsa-firmware
-alsa-tools-firmware
-ivtv-firmware
-iwl100-firmware
-iwl105-firmware
-iwl135-firmware
-iwl1000-firmware
-iwl2000-firmware
-iwl2030-firmware
-iwl3160-firmware
-iwl3945-firmware
-iwl4965-firmware
-iwl5000-firmware
-iwl5150-firmware
-iwl6000-firmware
-iwl6000g2a-firmware
-iwl6000g2b-firmware
-iwl6050-firmware
-iwl7260-firmware
-iwl7265-firmware
%end

%pre --interpreter=/usr/bin/bash
exec < /dev/tty6 > /dev/tty6 2> /dev/tty6
chvt 6

function printLogo() {
echo ""
echo "               dP"
echo "               88"
echo ".d8888b. .d888b88 .d8888b. .d8888b. 88d888b."
echo "88ooood8 88.  .88 88.  .88 88.  .88 88.  .88"
echo "88.  ... 88.  .88 88.  ... 88.  .88 88.  .88"
echo ".88888P. .88888P8 .88888P. .88888P. 88Y888P8"
echo "                                    88"
echo "                                    dP"
echo ""
}
printLogo
6
python --version
mkdir menu
cd menu
tar -xf /Users/Korey/git/EDCOP/kickstart-menu.tar.gz
python menu.py
/bin/sh
%end

%post
# sudo
echo "%vagrant ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/vagrant
%end
